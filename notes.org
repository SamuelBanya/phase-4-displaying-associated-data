* Notes
The relationships for this lab are as follows:
- A dog house has many reviews
- Each review belongs to one dog house

I then set up the lab with the following commands:
#+begin_src bash
bundle install
rails db:migrate db:seed
#+end_src

I then ran the backend server with the 'rails s' command.

I then visited the 'http://localhost:3000/dog_houses/1' URL in the Chrome browser, and received the following JSON response:
#+begin_src json
// 20221026191252
// http://localhost:3000/dog_houses/1

{
  "id": 1,
  "image": "https://cdn.motor1.com/images/mgl/NvjmG/s1/ford-noise-cancelling-dog-kennel.jpg",
  "name": "Mid Century Home in Scenic Uptown",
  "city": "New York",
  "price": 70,
  "favorite": false,
  "latitude": "40.682087",
  "longitude": "-74.010471",
  "created_at": "2022-10-27T00:08:58.098Z",
  "updated_at": "2022-10-27T00:08:58.098Z"
}
#+end_src

I then verified the 'has_many' relationship between the 'DogHouse' and 'Reviews' model with the 'rails c' console:
#+begin_src bash
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-displaying-associated-data $ rails c
Loading development environment (Rails 6.1.3.2)
.gem :001 > DogHouse.first.reviews()
   (0.7ms)  SELECT sqlite_version(*)
  DogHouse Load (0.1ms)  SELECT "dog_houses".* FROM "dog_houses" ORDER BY "dog_houses"."id" ASC LIMIT ?  [["LIMIT", 1]]
  Review Load (0.1ms)  SELECT "reviews".* FROM "reviews" WHERE "reviews"."dog_house_id" = ? /* loading for inspect */ LIMIT ?  [["dog_house_id", 1], ["LIMIT", 11]]
 => #<ActiveRecord::Associations::CollectionProxy [#<Review id: 1, username: "luis", comment: "Cleanse bicycle rights mixtape single-origin coffe...", rating: 5, dog_house_id: 1, created_at: "2022-10-27 00:08:58.842932000 +0000", updated_at: "2022-10-27 00:08:58.842932000 +0000">, #<Review id: 2, username: "clement.williamson", comment: "Loko crucifix cronut bespoke wayfarers normcore bu...", rating: 1, dog_house_id: 1, created_at: "2022-10-27 00:08:58.846929000 +0000", updated_at: "2022-10-27 00:08:58.846929000 +0000">, #<Review id: 3, username: "nida.kshlerin", comment: "Offal quinoa irony echo.", rating: 4, dog_house_id: 1, created_at: "2022-10-27 00:08:58.872468000 +0000", updated_at: "2022-10-27 00:08:58.872468000 +0000">]>
#+end_src

I then modified the 'app/controllers/dog_houses_controller.rb' Controller file with the following revision:
#+begin_src ruby
class DogHousesController < ApplicationController
  rescue_from ActiveRecord::RecordNotFound, with: :render_not_found_response

  def show
    dog_house = DogHouse.find(params[:id])
    render json: dog_house, include: :reviews
  end

  private

  def render_not_found_response
    render json: { error: "Dog house not found" }, status: :not_found
  end

end
#+end_src

I then revisited the 'http://localhost:3000/dog_houses/1' URL in the Chrome browser, and received the more detailed JSON response to include the 'reviews' as well:
#+begin_src json
// 20221026191624
// http://localhost:3000/dog_houses/1

{
  "id": 1,
  "image": "https://cdn.motor1.com/images/mgl/NvjmG/s1/ford-noise-cancelling-dog-kennel.jpg",
  "name": "Mid Century Home in Scenic Uptown",
  "city": "New York",
  "price": 70,
  "favorite": false,
  "latitude": "40.682087",
  "longitude": "-74.010471",
  "created_at": "2022-10-27T00:08:58.098Z",
  "updated_at": "2022-10-27T00:08:58.098Z",
  "reviews": [
    {
      "id": 1,
      "username": "luis",
      "comment": "Cleanse bicycle rights mixtape single-origin coffee readymade yolo muggle magic vhs wayfarers.",
      "rating": 5,
      "dog_house_id": 1,
      "created_at": "2022-10-27T00:08:58.842Z",
      "updated_at": "2022-10-27T00:08:58.842Z"
    },
    {
      "id": 2,
      "username": "clement.williamson",
      "comment": "Loko crucifix cronut bespoke wayfarers normcore butcher.",
      "rating": 1,
      "dog_house_id": 1,
      "created_at": "2022-10-27T00:08:58.846Z",
      "updated_at": "2022-10-27T00:08:58.846Z"
    },
    {
      "id": 3,
      "username": "nida.kshlerin",
      "comment": "Offal quinoa irony echo.",
      "rating": 4,
      "dog_house_id": 1,
      "created_at": "2022-10-27T00:08:58.872Z",
      "updated_at": "2022-10-27T00:08:58.872Z"
    }
  ]
}
#+end_src

I then revised the 'app/controllers/reviews_controller.rb' Reviews Controller controller file with the following contents:
#+begin_src ruby
class ReviewsController < ApplicationController

  def index
    reviews = Review.all.order(rating: :desc)
    render json: reviews, include: :dog_house
  end

end
#+end_src

I then visited the 'http://localhost:3000/dog_houses/1' URL in the Chrome browser, and received the updated JSON response:
#+begin_src json
// 20221026191908
// http://localhost:3000/dog_houses/1

{
  "id": 1,
  "image": "https://cdn.motor1.com/images/mgl/NvjmG/s1/ford-noise-cancelling-dog-kennel.jpg",
  "name": "Mid Century Home in Scenic Uptown",
  "city": "New York",
  "price": 70,
  "favorite": false,
  "latitude": "40.682087",
  "longitude": "-74.010471",
  "created_at": "2022-10-27T00:08:58.098Z",
  "updated_at": "2022-10-27T00:08:58.098Z",
  "reviews": [
    {
      "id": 1,
      "username": "luis",
      "comment": "Cleanse bicycle rights mixtape single-origin coffee readymade yolo muggle magic vhs wayfarers.",
      "rating": 5,
      "dog_house_id": 1,
      "created_at": "2022-10-27T00:08:58.842Z",
      "updated_at": "2022-10-27T00:08:58.842Z"
    },
    {
      "id": 2,
      "username": "clement.williamson",
      "comment": "Loko crucifix cronut bespoke wayfarers normcore butcher.",
      "rating": 1,
      "dog_house_id": 1,
      "created_at": "2022-10-27T00:08:58.846Z",
      "updated_at": "2022-10-27T00:08:58.846Z"
    },
    {
      "id": 3,
      "username": "nida.kshlerin",
      "comment": "Offal quinoa irony echo.",
      "rating": 4,
      "dog_house_id": 1,
      "created_at": "2022-10-27T00:08:58.872Z",
      "updated_at": "2022-10-27T00:08:58.872Z"
    }
  ]
}
#+end_src

Answers To 'Check Your Understanding':
- Q1. What does the include option do for us and how do we use it?
- Answer: The 'include: ' option allows you to include data within the rendered JSON response in a given Controller for a model that contains a certain Active Record association method
